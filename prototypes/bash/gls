#!/bin/bash
# Generates header documentation for each file in the current directory based on information stored in the current git repository.
#
# Usage


# How to display stuff.
function displayFile
{
  echo "# Author: $author <$email>"
  echo "# Date:   $now"
  
  if [ "$fileOrigin" != '' ]; then
    echo "# Origin: $fileOrigin"
  fi
  
  echo "# Repo:   $repo"
  echo "# File:   $1"
}

function displayDirectory
{
  echo "# DIRECTORY $1"
}

function displaySymlink
{
  echo "# SYMLINK $1"
}



# Harvest information
function getAuthor
{
  git config --global user.name
}

function getEmail
{
  git config --global user.email
}

function getRepo
{
  git config --local remote.origin.url
}

function getFileOrigin
{
  echo "$1" | cut -d@ -f 2 | cut -d: -f1
}



# Process and choose appropriate display.
function processListing
{
  while read directoryItem;do
    if [ -f "$directoryItem" ]; then # File
      displayFile "$directoryItem"
    elif [ -d "$directoryItem" ]; then # Directory
      displayDirectory "$directoryItem"
    elif [ -h "$directoryItem" ]; then # Symlink
      displaySymlink "$directoryItem"
    fi
    
    echo
  done
}



# Flow
function likeLS
{
  ls "$@" | processListing
}

function chooseFlow
{
  if [ "$1" != '' ]; then
    likeLS "$@"
  elif [ ! -t 0 ]; then
    processListing
  else
    likeLS
  fi
}



# Get information
author=`getAuthor`
email=`getEmail`
now=`date`
repo=`getRepo`
fileOrigin=`getFileOrigin "$repo"`


# Get started.
chooseFlow "$@"
